<style>
  .buttonLine{
    height:auto;
  }

  .touchscreenTextInput {
    display:none;
  }

  #tt_page_primary_diagnosis .touchscreenTextInput
  {
    display:inline;
    top:345px;
    width:610px;
  }

  #tt_page_select_hospital .touchscreenTextInput
  {
    display:inline;
    top:345px;
    width:610px;
  }

  #tt_page_refer_case_to_another_hospital #viewport
  {
    height:145px;
    width:380px;
  }

  .options
  {
    height:10em
  }
  
  .options li 
  {
    font-size: 1.5em
  }
  
  li {
    border-top:1px dotted silver;
    border-bottom:1px dotted silver;
  }

  #tt_page_primary_diagnosis .touchscreenTextInput
  {
    top: 346px; 
  }

  #tt_page_primary_diagnosis .options 
  {
    height:261px;
  }

  #tt_page_mult_text_field .options 
  {
    height:21em;
    top:55;
  }

  .tt_controls_mult_text_field #clearButton
  {
    display:none;
  }

  .tt_controls_treatment #clearButton
  {
    display:none;
  }

  #tt_page_treatment .options 
  {
    height:21em;
    top:55;
  }

  #tt_page_primary_diagnosis .options li 
  {
    font-size: 1.5em
  }
  
  #space { display:inline; font-size:1.2em; }
    
  li {
    border-top:1px dotted silver;
    border-bottom:1px dotted silver;
  }

  .prescription {
    margin-left:30px;
    margin-top:30px;
    background:#fff;
  }

  #tt_page_primary_diagnosis #viewport { width:595px;top:48px; }

  #viewport { width:595px; }

  #tt_page_secondary_diagnosis #viewport 
  {
    top:100px;
    height:250px;
    width:70%;
  }

  #tt_page_secondary_diagnosis .touchscreenTextInput {
    display:inline;
    top:50px;
    width:70%;
  }

  #tt_page_treatment .touchscreenTextInput {
    display:inline;
    top:50px;
    width:70%;
  }

  #tt_page_treatment #viewport 
  {
    top:100px;
    height:250px;
    width:70%;
  }

  #keypad 
  {
    z-index:600;
    bottom:15px;
    position:absolute;
    background-color:#FFFF99;
    left:30px;
    border-style:solid;
    border-width:1px;
    border-color:lightblue;
    display:none;
  }

  #input_text {
    top:375px;
    display:inline;
    width:45%;
    z-index:600;
    background-color: lightblue;
    border: 2px inset lightblue;
    left: 25px;
    position: absolute;
    font-size: 1.5em;
    margin-left: 5px;
    padding: 5px;
    display:none;
  }

  .tt_controls_secondary_diagnosis #clearButton { display:none; }
</style>
<%= javascript_include_tag "prototype" %>

<script type="text/javascript">
  var tt_cancel_destination = "/diagnosis/diagnosis/<%#= @patient.patient_id %>"
  var keyboard = null;
  var available_option = null;
  var mult_text_field = null;
  var current_page = null;

  function updateList(search_str) {
    document.getElementById('input_text').value = search_str;

    if(current_page == 'tt_page_treatment'){
      var url = "/diagnosis/multi_drug_list/?value=" + search_str;
    }else{ var url = "/diagnosis/multi_list/?value=" + search_str; }
    response = new Ajax.Request(url,{method:'get',onSuccess: function(transport){
      text = transport.responseText || "";
      available_option.innerHTML = text;
    }});
  }


  function set_diagnosis(diagnosis) {
    var drug = encodeURI($(diagnosis).value);
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/diagnosis/list?value=");
    clearInput();
  }

  function addKeyboard(page) {
    try{
      available_option = $('options')
    }catch(e){ available_option = null;}

    current_page = page
    keyboard = $('keypad');
    mult_text_field = '';
    input_box = document.getElementById(page).getElementsByTagName("input")[0]
    document.getElementById("input_text").value = '';
  
    if (tstInputTarget.value !=''){
      selected_text = tstInputTarget.value.split(';') ; tstInputTarget.value = '';
      for(i = 0 ; i < selected_text.length ; i++){
        if(tstInputTarget.value == ''){
          if(selected_text[i] !='')
            tstInputTarget.value = selected_text[i]
        }else{
          if(selected_text[i] !='')
            tstInputTarget.value+=';' + selected_text[i]
        }
      }
    }
    input_box.value = tstInputTarget.value

    showAlphaKeypad();
    $('backButton').setAttribute('onmousedown','hideKeypad();gotoPage(' + (tstCurrentPage - 1) + ');')
    $('nextButton').setAttribute('onmousedown','hideKeypad();gotoNextPage();')
    //if (page == 'tt_page_secondary_diagnosis')
  }

  function hideKeypad(){ 
    if(mult_text_field != '' && mult_text_field != null && current_page == 'tt_page_treatment')
      return

    document.getElementById("keypad").style.display = 'none'
    document.getElementById("input_text").style.display = 'none'
    $('nextButton').setAttribute('onmousedown','gotoNextPage();')
    try{
      $('backButton').setAttribute('onmousedown','gotoPage(' + (tstCurrentPage - 1) + ');')
    }catch(e) {}
  }

  function showAlphaKeypad(){
   keypad = document.getElementById("keypad")
   document.getElementById("input_text").style.display = 'inline'
   keypad.style.display = "inline";
   keypad.style.height = "246";
   keypad.style.width = "605";
   keyboard.innerHTML = getButtonsX("ABCDEFGH") + "</br>"
   keyboard.innerHTML+= getButtonsX("IJKLMNOP") + "</br>"
   keyboard.innerHTML+= getButtonsX("QRSTUVWXYZ")
   keyboard.innerHTML+= getButtonStringX('backspace','<span>Bksp</span>')
   keyboard.innerHTML+= getButtonStringX('space','<span>Space</span>')
   keyboard.innerHTML+= getButtonStringX('clear','<span>Clear</span>')
   keyboard.innerHTML+= getButtonStringX('num','<span>Num</span>')
 }

function showNumericKeypad(){
  document.getElementById("keypad").style.height = "145";
  document.getElementById("keypad").style.width = "605";
  keyboard.innerHTML = getButtonsX("123")
  keyboard.innerHTML+= getButtonsX("456")
  keyboard.innerHTML+= getButtonsX("7890")
  keyboard.innerHTML+= getButtonStringX('space','<span>Space</span>')
  keyboard.innerHTML+= getButtonStringX('clear','<span>Clear</span>')
  keyboard.innerHTML+= getButtonStringX('backspace','<span>Bksp</span>')
  keyboard.innerHTML+= getButtonStringX('abc','<span>abc</span>')
  keyboard.innerHTML+= getButtonStringX('dash','<span>-</span>')
  keyboard.innerHTML+= getButtonStringX('slash','<span>/</span>')
}

function getButtonStringX(id,string){
  return "<button \
    onMouseDown='pressX(this.id);' \
    class='keyboardButton' \
    id='"+id+"'>"+
    string +
  "</button>";
  }


 function getButtonsX(chars){
  var buttonLines = "";
  for(var i=0; i<chars.length; i++){
    character = chars.substring(i,i+1)
    buttonLines += getButtonStringX(character,character)
  }
    return buttonLines;
  }

</script>

<div id="keypad">
<span class="keypad">
</span>
</div>
<%= text_field_tag :input_text, nil %>


<form id='diagnosis' action="/diagnosis/create" method='post'>



  <select id="select" name="select" helptext="REFER CASE TO ANOTHER HOSPITAL">
    <option value="option3"></option>
    <option value="option1">Yes</option>
    <option value="option2">No</option>
  </select>
  <label for="refer">SELECT HOSPITAL</label>
    <% options = {
      :id => "refer",
      :field_type => 'text',
      :helptext =>"SELECT HOSPITAL",
      :condition => "($('select').value == 'option1')",
      :allowFreeText => 'true',
      :ajaxURL => "/search/health_center_locations?value=",
      :textCase => "upper",
      :tt_onLoad => "changeCaption()"
    } %>


    <script>
      function selectedValue(){
        var value = $('select').value;
        if (value == 'option1'){
          return true
        }
        return false;
      } 

      function changeCaption(){
       $('nextButton').innerHTML = 'Finish';
      }
    </script>


    <%= text_field_tag :location_name, nil, options %>
    <%= hidden_field_tag("observations[][concept_name]", "REFER TO OTHER HOSPITAL", options) %>

    <%= hidden_field_tag "encounter[encounter_type_name]", "REFERRED" %>
    <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
    <%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
    <%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

    <% primary_diagnosis = [''] 
       primary_diagnosis << "Other"
       @options.each{|option|
         primary_diagnosis << option
       }
    %>   
    <%= select_tag(:primary_diagnosis, options_for_select(primary_diagnosis) ,:helpText =>"PRIMARY DIAGNOSIS",:condition => "selectedValue() == false")%>
    <% options = [""]
       options << "Not applicable"
       options << "Other"
       @options.each{|option|
         options << option
       }
    %>
    <%= select_tag('secondary_diagnosis[]', options_for_select(options) ,:multiple => true, :helpText =>"SECONDARY DIAGNOSIS",:condition => "selectedValue() == false",:tt_onLoad => "addKeyboard('tt_page_secondary_diagnosis')" )%>
  
    <% drugs = [""]
       drugs << ["Not applicable"]
       @drugs.each{|drug_name|
         drugs << drug_name
       } rescue nil
    %>

    <%= select_tag('treatment[]', options_for_select(drugs) ,:multiple => true, :helpText =>"TREATMENT",:condition => "selectedValue() == false",:tt_onLoad =>"addKeyboard('tt_page_treatment')")%>
  
</form>

<script>


function pressX(pressedChar){
    switch (pressedChar) {
      case 'backspace':
        mult_text_field = mult_text_field.substring(0,mult_text_field.length-1);
        updateList(mult_text_field);
        return;
      case 'space':
        mult_text_field+= " "
        updateList(mult_text_field);
        return
      case 'clear':
        mult_text_field = ""
        updateList(mult_text_field);
        return
      case 'num':
        showNumericKeypad();
        return
      case 'slash':
        mult_text_field+= "/"
        updateList(mult_text_field);
        return
      case 'dash':
        mult_text_field+= "-"
        updateList(mult_text_field);
        return
      case 'abc':
        showAlphaKeypad();
        return
    }
    mult_text_field+= pressedChar;
    updateList(mult_text_field);
  }
</script>
